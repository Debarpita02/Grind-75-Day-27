class Solution {
    public int[][] kClosest(int[][] points, int k) {
        PriorityQueue<int[]> pq = new PriorityQueue<int[]>(k, new Filter());
        for(int[]point : points) {
            pq.add(point);
            if(pq.size()>k) {
                pq.remove();
            }
        }
        int[][]result = new int[k][2];
        for(int i = 0; i < k; i++) {
            result[i] = pq.poll();
        }
        return result;
    }
    private class Filter implements Comparator<int[]> {
        @Override
        public int compare(int[] a, int[] b) {
            return ((b[0] * b[0] + b[1] * b[1]) - (a[0] * a[0] + a[1] * a[1]));
        }
    }
}